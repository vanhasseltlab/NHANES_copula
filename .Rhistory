48+36
load("clean_data/nhanes_data_12d_5r.Rdata")
# generate a small dataset
library(rvinecopulib)
library(dplyr)
set.seed(123)
x <- 1:20
y1 <- x + rnorm(20, mean = 0, sd = 5)
y2 <- 4*x + rnorm(20, mean = 0, sd = 5)
# Generate data third variable (slope = 10)
Age <- c(runif(20, min = 0, max = 20),
runif(20, min = 20, max = 40))
data <- cbind(rbind(cbind(x,y1),cbind(x,y2)),Age)
Weight_1 <- rep(c(1,10), each = 20)
Weight_2 <- rep(c(10,1), each = 20)
colnames(data) <- c("x", "y","age")
data <- as.numeric(data)
copula_sw <- vine(dat = data,
margins_controls = list(mult = 1, xmin =NaN, xmax = NaN, bw = NA, deg = 2),
copula_controls = list(family_set = "parametric",
weights = Weight_1,
par_method = "mle",
selcrit = "aic",
keep_data = TRUE,
cores = 1,
var_types = rep("c", 3)),
weights = numeric(),
keep_data = TRUE,
cores = 1)
copula_uw <- vine(dat = data,
margins_controls = list(mult = 1, xmin =NaN, xmax = NaN, bw = NA, deg = 2),
copula_controls = list(family_set = "parametric",
weights = Weight_2,
par_method = "mle",
selcrit = "aic",
keep_data = TRUE,
cores = 1,
var_types = rep("c", 3)),
weights = numeric(),
keep_data = TRUE,
cores = 1)
copula_sw
copula_uw
tree_sw <- plot(copula_sw$copula,
tree = 1,
var_names = "use",
edge_labels = "family")
copula_uw$copula
data
x <- 1:20
y1 <- x + rnorm(20, mean = 0, sd = 5)
y2 <- 4*x + rnorm(20, mean = 0, sd = 5)
# Generate data third variable (slope = 10)
Age <- c(runif(20, min = 0, max = 20),
runif(20, min = 20, max = 40))
data <- cbind(rbind(cbind(x,y1),cbind(x,y2)),Age)
data
Weight_1 <- rep(c(1,10), each = 20)
Weight_2 <- rep(c(10,1), each = 20)
colnames(data) <- c("x", "y","age")
data <- as.numeric(data)
data <- cbind(rbind(cbind(x,y1),cbind(x,y2)),Age)
Weight_1 <- rep(c(1,10), each = 20)
Weight_2 <- rep(c(10,1), each = 20)
colnames(data) <- c("x", "y","age")
copula_sw <- vine(dat = data,
margins_controls = list(mult = 1, xmin =NaN, xmax = NaN, bw = NA, deg = 2),
copula_controls = list(family_set = "parametric",
weights = Weight_1,
par_method = "mle",
selcrit = "aic",
keep_data = TRUE,
cores = 1,
var_types = rep("c", 3)),
weights = numeric(),
keep_data = TRUE,
cores = 1)
copula_uw <- vine(dat = data,
margins_controls = list(mult = 1, xmin =NaN, xmax = NaN, bw = NA, deg = 2),
copula_controls = list(family_set = "parametric",
weights = Weight_2,
par_method = "mle",
selcrit = "aic",
keep_data = TRUE,
cores = 1,
var_types = rep("c", 3)),
weights = numeric(),
keep_data = TRUE,
cores = 1)
copula_sw$copula
copula_uw$copula
sim_sw <- rvine(1000, copula_sw) %>%
as.data.frame() %>%
mutate(type = "weighted VP")
sim_uw <- rvine(1000, copula_uw) %>%
as.data.frame() %>%
mutate(type = "unweighted VP")
sim <- rbind(sim_sw, sim_uw)
library(GGally)
library(ggplot2)
library(GGally)
ggpairs(sim, aes(color = type))
?numeric
library(rvinecopulib)
library(dplyr)
library(ggplot2)
library(GGally)
set.seed(123)
x <- 1:20
y1 <- x + rnorm(20, mean = 0, sd = 10)
y2 <- 4*x + rnorm(20, mean = 0, sd = 15)
# Generate data third variable (slope = 10)
Age <- c(runif(20, min = 0, max = 20),
runif(20, min = 20, max = 40))
data <- cbind(rbind(cbind(x,y1),cbind(x,y2)),Age)
Weight_1 <- rep(c(1,10), each = 20)
Weight_2 <- rep(c(10,1), each = 20)
colnames(data) <- c("x", "y","age")
data
copula_sw <- vine(dat = data,
margins_controls = list(mult = 1, xmin =NaN, xmax = NaN, bw = NA, deg = 2),
copula_controls = list(family_set = "parametric",
weights = Weight_1,
par_method = "mle",
selcrit = "aic",
keep_data = TRUE,
cores = 1,
var_types = rep("c", 3)),
weights = numeric(),
keep_data = TRUE,
cores = 1)
copula_uw <- vine(dat = data,
margins_controls = list(mult = 1, xmin =NaN, xmax = NaN, bw = NA, deg = 2),
copula_controls = list(family_set = "parametric",
weights = Weight_2,
par_method = "mle",
selcrit = "aic",
keep_data = TRUE,
cores = 1,
var_types = rep("c", 3)),
weights = numeric(),
keep_data = TRUE,
cores = 1)
###  tree ----
copula_sw
copula_uw
Weight_1 <- rep(c(1,10), each = 20)
Weight_1
Weight_2 <- rep(c(10,1), each = 20)
Weight_2
copula_1_20 <- vine(dat = data[c(1:20,)],
margins_controls = list(mult = 1, xmin =NaN, xmax = NaN, bw = NA, deg = 2),
copula_controls = list(family_set = "parametric",
weights = Weight_1,
par_method = "mle",
selcrit = "aic",
keep_data = TRUE,
cores = 1,
var_types = rep("c", 3)),
weights = numeric(),
keep_data = TRUE,
cores = 1)
data[1:20,]
copula_1_20 <- vine(dat = data[1:20,],
margins_controls = list(mult = 1, xmin =NaN, xmax = NaN, bw = NA, deg = 2),
copula_controls = list(family_set = "parametric",
weights = Weight_1,
par_method = "mle",
selcrit = "aic",
keep_data = TRUE,
cores = 1,
var_types = rep("c", 3)),
weights = numeric(),
keep_data = TRUE,
cores = 1)
data[21:40,]
copula_21_40 <- vine(dat = data[21:40,],
margins_controls = list(mult = 1, xmin =NaN, xmax = NaN, bw = NA, deg = 2),
copula_controls = list(family_set = "parametric",
weights = Weight_1,
par_method = "mle",
selcrit = "aic",
keep_data = TRUE,
cores = 1,
var_types = rep("c", 3)),
weights = numeric(),
keep_data = TRUE,
cores = 1)
copula_1_20$copula
copula_21_40$copula
x <- rnorm(30) * matrix(1, 30, 5) + 0.5 * matrix(rnorm(30 * 5), 30, 5)
x
u <- pseudo_obs(x)
u
fit <- vinecop(u)
summary(fit)
plot(fit)
contour(fit)
# test the weight with this example
nrows(u)
# test the weight with this example
nrow(u)
weight_test_1 <- rep(c(1,100),each = 15)
weight_test_2 <- rep(c(100,1),each = 15)
fit_1 <- vinecop(u,
weights = weight_test_1)
summary(fit)
summary(fit_1)
fit_1
fit_2 <- vinecop(u,
weights = weight_test_2)
fit_2
# weight works!!! --> maybe it's because of the absolute value of weight
# Assign weights for experiments
Weight_1 <- rep(c(1,1000), each = 20) # more weight on the second part of the <data>
Weight_2 <- rep(c(1000,1), each = 20) # more weight on the first part of the <data>
colnames(data) <- c("x", "y","age")
copula_sw <- vine(dat = data,
margins_controls = list(mult = 1, xmin =NaN, xmax = NaN, bw = NA, deg = 2),
copula_controls = list(family_set = "parametric",
weights = Weight_1,
par_method = "mle",
selcrit = "aic",
keep_data = TRUE,
cores = 1,
var_types = rep("c", 3)),
weights = numeric(),
keep_data = TRUE,
cores = 1)
copula_uw <- vine(dat = data,
margins_controls = list(mult = 1, xmin =NaN, xmax = NaN, bw = NA, deg = 2),
copula_controls = list(family_set = "parametric",
weights = Weight_2,
par_method = "mle",
selcrit = "aic",
keep_data = TRUE,
cores = 1,
var_types = rep("c", 3)),
weights = numeric(),
keep_data = TRUE,
cores = 1)
copula_sw$copula
copula_uw$data
copula_uw$copula
copula_sw$copula
load("D:/0 Others/Software/repo/NHANES_copula_coen_V0/clean_data/nhanes_data_12d_log_sw.Rdata")
library(dplyr)
library(survey)
library(ggplot2)
library(ggpubr)
library(reshape2)
library(tidyr)
library(dplyr)
library(combinat)
library(rvinecopulib)
source("functions/calculate_metric.R")
source("functions/calculate_frequency.R")
combi <- permn(1:5) # 120
i = 19
nhanes_data_sw_log$Race <- ordered(nhanes_data_sw_log$Race, levels = combi[[i]])
levels(nhanes_data_log$Race)
combi <- permn(1:5) # 120
i = 19
nhanes_data_sw_log$Race <- ordered(nhanes_data_sw_log$Race, levels = combi[[i]])
levels(nhanes_data_sw_log$Race)
nhanes_data_sw_log$Gender <- ordered(nhanes_data_sw_log$Gender, levels = c(1,2))
levels(nhanes_data_sw_log$Gender)
obs_data <- nhanes_data_sw_log %>%
select(-WTMEC2YR)
sample_w <- nhanes_data_sw_log$WTMEC2YR/5 # five releases
start_time <- Sys.time()
nhanes_copula_sw <- vine(dat = obs_data,
margins_controls = list(mult = 1, xmin =NaN, xmax = NaN, bw = NA, deg = 2),
copula_controls = list(family_set = "parametric",
par_method = "mle",
selcrit = "aic",
keep_data = TRUE,
cores = 1,
var_types = c("d","d",rep("c", 10))),
weights = sample_w,
keep_data = TRUE,
cores = 1)
end_time <- Sys.time()
cat("time of copula fitting: ", end_time - start_time, "weighted") # 16.11191 weighted
save(nhanes_copula_sw, file = "results/nhanes_copula_Lscale_weighted.Rdata")
sessionInfo()
##~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
library(tidyr)
library(dplyr)
library(combinat)
library(reshape2)
library(ggplot2)
library(ggpubr)
library(ggside)
library(rvinecopulib)
source("functions/calculate_metric.R")
source("functions/calculate_frequency.R") # functions for the batch calculation of frequency of discrete var
# data
load("results/nhanes_copula_Lscale.Rdata")
load("clean_data/nhanes_data_12d_5r.Rdata") # observation data, original scale
load("clean_data/nhanes_data_12d_5r.Rdata") # observation data, original scale
